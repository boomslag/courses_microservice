# Generated by Django 3.2.16 on 2023-03-05 13:13

import apps.courses.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('category', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user', models.UUIDField(blank=True, null=True)),
                ('body', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now_add=True)),
                ('is_accepted_answer', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('token_id', models.TextField(unique=True)),
                ('author', models.UUIDField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('short_description', models.TextField(blank=True, max_length=125, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=apps.courses.models.course_directory_path)),
                ('sales_video', models.FileField(blank=True, null=True, upload_to=apps.courses.models.course_directory_path)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', models.SlugField(default=uuid.uuid4, unique=True)),
                ('published', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('student_rating', models.IntegerField(blank=True, default=0, null=True)),
                ('slug_changes', models.IntegerField(blank=True, default=1, null=True)),
                ('language', models.CharField(blank=True, max_length=50, null=True)),
                ('level', models.CharField(blank=True, max_length=50, null=True)),
                ('taught', models.CharField(blank=True, max_length=120, null=True)),
                ('welcome_message', models.CharField(blank=True, max_length=1200, null=True)),
                ('congrats_message', models.CharField(blank=True, max_length=1200, null=True)),
                ('course_length', models.CharField(blank=True, default=0, max_length=20, null=True)),
                ('nft_address', models.CharField(blank=True, default=0, max_length=256, null=True)),
                ('payment', models.CharField(blank=True, default='Paid', max_length=100, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('compare_price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('discount_until', models.DateTimeField(default=django.utils.timezone.now)),
                ('discount', models.BooleanField(default=False)),
                ('students', models.IntegerField(blank=True, default=0)),
                ('best_seller', models.BooleanField(default=False)),
                ('goals', models.BooleanField(default=False)),
                ('course_structure', models.BooleanField(default=False)),
                ('setup', models.BooleanField(default=False)),
                ('film', models.BooleanField(default=False)),
                ('curriculum', models.BooleanField(default=False)),
                ('captions', models.BooleanField(default=False)),
                ('accessibility', models.BooleanField(default=False)),
                ('landing_page', models.BooleanField(default=False)),
                ('pricing', models.BooleanField(default=False)),
                ('promotions', models.BooleanField(default=False)),
                ('allow_messages', models.BooleanField(default=False)),
                ('views', models.IntegerField(blank=True, default=0)),
                ('clicks', models.IntegerField(blank=True, default=0, null=True)),
                ('impressions', models.IntegerField(blank=True, default=0, null=True)),
                ('clickThroughRate', models.FloatField(blank=True, default=0, null=True)),
                ('purchases', models.IntegerField(blank=True, default=0, null=True)),
                ('conversion_rate', models.FloatField(blank=True, default=0, null=True)),
                ('avg_time_on_page', models.FloatField(blank=True, default=0, null=True)),
                ('sold', models.IntegerField(blank=True, default=0, null=True)),
                ('income_earned', models.PositiveIntegerField(blank=True, default=0)),
                ('rating_no', models.IntegerField(blank=True, default=0, null=True)),
                ('avgRating', models.IntegerField(blank=True, default=0)),
                ('likes', models.IntegerField(blank=True, default=0)),
                ('totalRevenue', models.IntegerField(blank=True, default=0)),
                ('returns', models.IntegerField(blank=True, default=0)),
                ('refunds', models.IntegerField(blank=True, default=0)),
                ('can_delete', models.BooleanField(default=True)),
                ('banned', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('dedication', models.CharField(max_length=100)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='courses', to='category.category')),
            ],
            options={
                'ordering': ('date_created',),
            },
        ),
        migrations.CreateModel(
            name='Dislike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.UUIDField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(blank=True, null=True, upload_to='episodes')),
                ('filename', models.CharField(blank=True, max_length=1200, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=1200, null=True)),
                ('length', models.DecimalField(decimal_places=2, default=0.0, max_digits=100)),
                ('free', models.BooleanField(blank=True, default=False, null=True)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('user', models.UUIDField(blank=True, null=True)),
                ('section_uuid', models.UUIDField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now=True, null=True)),
                ('published', models.BooleanField(blank=True, default=False, null=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='episode_belongs_to_course', to='courses.course')),
            ],
            options={
                'ordering': ('number',),
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.UUIDField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(blank=True, null=True, upload_to=apps.courses.models.course_directory_path)),
                ('url', models.URLField(blank=True, null=True)),
                ('user', models.UUIDField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WhoIsFor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position_id', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(max_length=255)),
                ('user', models.UUIDField(blank=True, null=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='whoisfor_belongs_to_course', to='courses.course')),
            ],
        ),
        migrations.CreateModel(
            name='WhatLearnt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position_id', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(max_length=255)),
                ('user', models.UUIDField(blank=True, null=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='whatlearnt_belongs_to_course', to='courses.course')),
            ],
        ),
        migrations.CreateModel(
            name='ViewedCoursesLibrary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user', models.UUIDField(blank=True, null=True)),
                ('courses', models.ManyToManyField(blank=True, to='courses.Course')),
            ],
            options={
                'verbose_name_plural': 'Viewed Courses',
            },
        ),
        migrations.CreateModel(
            name='ViewCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(max_length=255)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_view_count', to='courses.course')),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position_id', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=60, null=True)),
                ('file', models.FileField(upload_to='marketplace/courses')),
                ('author', models.UUIDField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courseVideo', to='courses.course')),
            ],
        ),
        migrations.CreateModel(
            name='Sellers',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('author', models.UUIDField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=256, null=True)),
                ('polygon_address', models.CharField(blank=True, max_length=256, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courseSeller', to='courses.course')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('learning_objective', models.CharField(blank=True, max_length=1200, null=True)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('user', models.UUIDField(blank=True, null=True)),
                ('published', models.BooleanField(default=False)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='section_belongs_to_course', to='courses.course')),
                ('episodes', models.ManyToManyField(blank=True, to='courses.Episode')),
            ],
            options={
                'ordering': ('number',),
            },
        ),
        migrations.CreateModel(
            name='Requisite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position_id', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(max_length=255)),
                ('user', models.UUIDField(blank=True, null=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requisite_belongs_to_course', to='courses.course')),
            ],
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('user', models.UUIDField(blank=True, null=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rate_belongs_to_course', to='courses.course')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user', models.UUIDField(blank=True, null=True)),
                ('title', models.CharField(max_length=120)),
                ('body', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now_add=True)),
                ('has_accepted_answer', models.BooleanField(default=False)),
                ('correct_answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='correct_answer', to='courses.answer')),
                ('dislikes', models.ManyToManyField(blank=True, related_name='question_dislikes', to='courses.Like')),
                ('episode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='episode_belongs_to_question', to='courses.episode')),
                ('likes', models.ManyToManyField(blank=True, related_name='question_likes', to='courses.Like')),
            ],
            options={
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position_id', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=60, null=True)),
                ('file', models.ImageField(upload_to='marketplace/courses')),
                ('author', models.UUIDField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courseImage', to='courses.course')),
            ],
        ),
        migrations.AddField(
            model_name='episode',
            name='questions',
            field=models.ManyToManyField(blank=True, related_name='episode_questions', to='courses.Question'),
        ),
        migrations.AddField(
            model_name='episode',
            name='resources',
            field=models.ManyToManyField(blank=True, to='courses.Resource'),
        ),
        migrations.AddField(
            model_name='course',
            name='images',
            field=models.ManyToManyField(blank=True, related_name='courseImages', to='courses.Image'),
        ),
        migrations.AddField(
            model_name='course',
            name='rating',
            field=models.ManyToManyField(blank=True, related_name='courseRating', to='courses.Rate'),
        ),
        migrations.AddField(
            model_name='course',
            name='requisites',
            field=models.ManyToManyField(blank=True, related_name='requisite_from_course', to='courses.Requisite'),
        ),
        migrations.AddField(
            model_name='course',
            name='resources',
            field=models.ManyToManyField(blank=True, related_name='resources_from_course', to='courses.Resource'),
        ),
        migrations.AddField(
            model_name='course',
            name='sections',
            field=models.ManyToManyField(blank=True, related_name='section_from_course', to='courses.Section'),
        ),
        migrations.AddField(
            model_name='course',
            name='sellers',
            field=models.ManyToManyField(blank=True, related_name='courseSellers', to='courses.Sellers'),
        ),
        migrations.AddField(
            model_name='course',
            name='sub_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sub_category_courses', to='category.category'),
        ),
        migrations.AddField(
            model_name='course',
            name='topic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='topic_courses', to='category.category'),
        ),
        migrations.AddField(
            model_name='course',
            name='videos',
            field=models.ManyToManyField(blank=True, related_name='courseVideos', to='courses.Video'),
        ),
        migrations.AddField(
            model_name='course',
            name='what_learnt',
            field=models.ManyToManyField(blank=True, related_name='whatlearnt_from_course', to='courses.WhatLearnt'),
        ),
        migrations.AddField(
            model_name='course',
            name='who_is_for',
            field=models.ManyToManyField(blank=True, related_name='whoisfor_from_course', to='courses.WhoIsFor'),
        ),
        migrations.AddField(
            model_name='answer',
            name='dislikes',
            field=models.ManyToManyField(blank=True, related_name='answer_dislikes', to='courses.Like'),
        ),
        migrations.AddField(
            model_name='answer',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='answer_likes', to='courses.Like'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.question'),
        ),
    ]
